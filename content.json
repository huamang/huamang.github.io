{"meta":{"title":"Welcome to my blogs","subtitle":"","description":"","author":"huamang","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"github上搭建好个人博客上传文件没有小绿格记录","date":"2020-12-09T14:09:39.891Z","updated":"2020-12-09T14:13:32.346Z","comments":true,"path":"2020/12/09/github上搭建好个人博客上传文件没有小绿格记录/","link":"","permalink":"http://example.com/2020/12/09/github%E4%B8%8A%E6%90%AD%E5%BB%BA%E5%A5%BD%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%B2%A1%E6%9C%89%E5%B0%8F%E7%BB%BF%E6%A0%BC%E8%AE%B0%E5%BD%95/","excerpt":"github上搭建好个人博客上传文件没有小绿格记录本来想搭建博客后在上面更新博客在github上打卡小绿格记录但是发现小绿格没有出来","text":"github上搭建好个人博客上传文件没有小绿格记录本来想搭建博客后在上面更新博客在github上打卡小绿格记录但是发现小绿格没有出来 我搭建完博客后上传到github的内容是这么些，但是我上传博客却不是在这里上传我是把md文件放到这个文件夹里使用下面三个命令来实现博客推送而不是git push的方式 123hexo cleanhexo ghexo d 但是我看到第一个文件夹里其实有更新的博客但是就是没有小绿格我看了一下我有两个branch，main和master，我的博客文件放在master里，而一个无关紧要的branch main被我创建库的时候设成了default,于是我就想改一下分支，但是没搞懂git的使用方法原理，把博客搞崩溃了。我干脆就删掉那个库重新搭建了一个博客，这次我就只设置了一个分支master搭够好了博客后我就发现使用hexo的三部上传博客也可以出现小绿格了。","categories":[],"tags":[]},{"title":"","slug":"指针练习题","date":"2020-12-09T09:08:13.831Z","updated":"2020-12-08T08:52:33.313Z","comments":true,"path":"2020/12/09/指针练习题/","link":"","permalink":"http://example.com/2020/12/09/%E6%8C%87%E9%92%88%E7%BB%83%E4%B9%A0%E9%A2%98/","excerpt":"使用指针方法实现字符串逆序存放后再输出编写程序：从键盘任意输入一个字符串，输出该字符串。然后，将该字符串逆序存放后再输出，要求用字符指针完成。（提示：逆序存放的函数接口：void invstr(char *s)）","text":"使用指针方法实现字符串逆序存放后再输出编写程序：从键盘任意输入一个字符串，输出该字符串。然后，将该字符串逆序存放后再输出，要求用字符指针完成。（提示：逆序存放的函数接口：void invstr(char *s)） 123456789101112131415161718192021#include&lt;stdio.h&gt;#include&lt;string.h&gt;void invstr(char *s)&#123; char b; int len; len=strlen(s); /*获取该字符串的长度*/ for(int i=0;i&lt;len/2;i++)&#123; /*该循环的目的是每次将字符串的头和尾换一下位置*/ b=*(s+i); /*字符串的第i个元素的地址暂时放到b里*/ *(s+i)=*(s+len-1-i); /*将字符串的倒数第i个元素换到第i个元素*/ *(s+len-1-i)=b; /*再将b存放的地址放回倒数第i个元素*/ &#125; &#125;int main()&#123; char a[1000]; gets(a); /*输入字符串*/ printf(&quot;%s\\n&quot;,a); /*正序输出一次*/ invstr(a); /*运行函数*/ printf(&quot;%s&quot;,a); /*逆序输出*/ &#125; 利用指针编程，用指针方法编写一函数，实现两个字符串的比较。编程点拨：即自己编写一个strcmp函数：strcmp(s1,s2)，如果s1= s2，返回值为0，如果s1≠s2, 返回它们二者第一个不同字符的ASCII码差值(如”BOY”与”BAD”, 第二个字母不同，”O”与”A”之差为79-65=14)。如果要s1&gt;s2，则输出正值，如果s1&lt;s2，则输出负值。 123456789101112131415161718192021222324252627#include&lt;stdio.h&gt;#include&lt;string.h&gt;void strcmp(char *s1,char *s2)&#123; int len,i=0,sum=0,lenmax; lenmax = strlen(s1); len = strlen(s2); if(lenmax &lt; len)&#123; lenmax = len; &#125; for(i=0;i&lt;lenmax and sum==0;i++)&#123; if(*(s1+i) &gt; *(s1+i))&#123; sum = *(s1+i) - *(s2+i); &#125; if(*(s1+i) &lt; *(s2+i))&#123; sum = ( - (*(s1+i) - *(s2+i))); &#125; &#125; printf(&quot;%d&quot;,sum);&#125;int main()&#123; char s1[1000],s2[1000]; gets(s1); gets(s2); strcmp(s1,s2); &#125;","categories":[],"tags":[]},{"title":"","slug":"在github创建库并向上上传文件","date":"2020-12-09T09:08:13.828Z","updated":"2020-12-08T12:08:08.881Z","comments":true,"path":"2020/12/09/在github创建库并向上上传文件/","link":"","permalink":"http://example.com/2020/12/09/%E5%9C%A8github%E5%88%9B%E5%BB%BA%E5%BA%93%E5%B9%B6%E5%90%91%E4%B8%8A%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/","excerpt":"在github创建库并向上上传文件我之前已经创建过库，绑定了密钥，所以省了很多步骤我就记录了一下过程怕自己忘记","text":"在github创建库并向上上传文件我之前已经创建过库，绑定了密钥，所以省了很多步骤我就记录了一下过程怕自己忘记 1，先在github创建一个库复制这个链接到时要用2.在本地创建一个文件夹在文件夹中使用git clone http....(这个是刚刚复制的地址)出现了你在github中创建的库的文件 上传文件1.打开后git bash here，将你要上传的文件放到里面再使用git add . 这个git add .的意思是：将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把.换成这个特定的文件名。 2.使用git commit -m “xxx” xxx是该文件的提交的注释说明 3.使用git push -u origin main这个’main’是分支名，每个人可能不一样这一步做完就算完成了详细教学可以参考其一其二","categories":[],"tags":[]},{"title":"","slug":"使用Hexo在Github上创建博客2020-10-20","date":"2020-12-09T09:08:13.824Z","updated":"2020-11-19T07:58:16.294Z","comments":true,"path":"2020/12/09/使用Hexo在Github上创建博客2020-10-20/","link":"","permalink":"http://example.com/2020/12/09/%E4%BD%BF%E7%94%A8Hexo%E5%9C%A8Github%E4%B8%8A%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A22020-10-20/","excerpt":"使用Hexo在Github上创建博客（收集了几个我踩过的坑）2020/10/21 16:44:48 2020/10/21 16:44:50 2020/10/21 16:44:52 前言先说明一下，我在此时只是一位刚上大一的新生，还啥都不懂，文中如果有什么错误或不规范的地方请各位大佬斧正，我定会虚心接受。在10月18日晚上，学长给我布置了个作业，让我在github上构建属于自己的博客网站，我了解了一下，觉得有个属于自己的网站简直太帅了，于是就兴冲冲的开始了搭建，在10月19号下午，废物的我终于搭建好了。于是在此记录一下我搭建的过程。","text":"使用Hexo在Github上创建博客（收集了几个我踩过的坑）2020/10/21 16:44:48 2020/10/21 16:44:50 2020/10/21 16:44:52 前言先说明一下，我在此时只是一位刚上大一的新生，还啥都不懂，文中如果有什么错误或不规范的地方请各位大佬斧正，我定会虚心接受。在10月18日晚上，学长给我布置了个作业，让我在github上构建属于自己的博客网站，我了解了一下，觉得有个属于自己的网站简直太帅了，于是就兴冲冲的开始了搭建，在10月19号下午，废物的我终于搭建好了。于是在此记录一下我搭建的过程。 一、安装必备插件Git，Node.js。安装Git和Node.js我就不在此多加赘述，哪里都能找到，而且讲的也详细。 二、安装Hexo。1、在电脑中创建文件夹比如我是这样创建的 2、进入这个文件夹按右键选择Git bash here打开小黑框 3、依次输入1npm install -g hexo 安装Hexo的基础框架。 1hexo init 初始化hexo。 1npm install 安装相关组件。 1hexo 生成静态页面 1hexo s 这个时候你可以在本地访问自己的网站了。 但是也只仅限于你，接下来我们要把这玩意上传到Github里面，让所有人都能访问。 三、将本地内容上传到Github里。1、注册一个Github账号2、创建一个仓库 3、配置Github的个人数据123git config --global user.name &quot;xxxname&quot; git config --global user.email &quot;xxxemail&quot; xxx是你自己的用户名，配置完成后可以输入下面的代码来验证 1git config --list 4、设置你的ssh密钥1ssh-keygen -t rsa -C &quot;xxxemail&quot; 注意上面代码的C要大写喔代码输入了以后一直按回车就好，直到出现这个页面就OK了然后我们可以直接在小黑框中调出密钥 1cat ~/.ssh/id_rsa.pub 从ssh-rsa开始一直到.com全部复制下来上传ssh就可以了像这样就成功了然后我们可以在小黑框上输入ssh -T git@github.com进行验证看到他和你打招呼了就意味着OK了 5、上传到Github用记事本打开这个文件，直接拉到最下面，按照这个格式打好，注意红点标注了的地方是有一个空格的 然后再到小黑框里输入npm install hexo-deployer-git --save 123hexo cleanhexo ghexo d 这个时候你的网站就算搭建完成了！可以让别人访问了http://你自己的用户名.github.io #上传博客将博客文件放到文件夹里后执行三个命令 123hexo cleanhexo ghexo d","categories":[],"tags":[]},{"title":"","slug":"hexo主题yilia文章太长截断遇到的问题","date":"2020-12-09T09:08:13.820Z","updated":"2020-12-08T23:55:04.608Z","comments":true,"path":"2020/12/09/hexo主题yilia文章太长截断遇到的问题/","link":"","permalink":"http://example.com/2020/12/09/hexo%E4%B8%BB%E9%A2%98yilia%E6%96%87%E7%AB%A0%E5%A4%AA%E9%95%BF%E6%88%AA%E6%96%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","excerpt":"hexo主题yilia文章太长截断遇到的问题","text":"hexo主题yilia文章太长截断遇到的问题 在md文件中加这个标签会有两个跑出来，我觉得很不美观所以找了另一个办法在yilia的_config.yml中把这个more改成空格就行了","categories":[],"tags":[]},{"title":"","slug":"1","date":"2020-12-09T09:08:13.817Z","updated":"2020-10-20T12:51:48.109Z","comments":true,"path":"2020/12/09/1/","link":"","permalink":"http://example.com/2020/12/09/1/","excerpt":"","text":"blog1我的博客搭建于2020年10月19日在10月20日再此第一次发表博客。","categories":[],"tags":[]}],"categories":[],"tags":[]}