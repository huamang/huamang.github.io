<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Huamang&#39;s Blog</title>
        <link>https://example.com/</link>
        <description>Huamang&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3364744355@qq.com (Huamang)</managingEditor>
            <webMaster>3364744355@qq.com (Huamang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 26 Oct 2022 10:49:50 &#43;0800</lastBuildDate>
            <atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>ROME</title>
    <link>https://example.com/rome/</link>
    <pubDate>Wed, 26 Oct 2022 10:49:50 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/rome/</guid>
    <description><![CDATA[Gadgetysoserial利用的是ObjectBean 1 2 3 4 5 6 7 8 9 10 11 12 * TemplatesImpl.getOutputProperties() * NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) * NativeMethodAccessorImpl.invoke(Object, Object[]) * DelegatingMethodAccessorImpl.invoke(Object, Object[]) * Method.invoke(Object, Object...) * ToStringBean.toString(String) * ToStringBean.toString() * ObjectBean.toString() * EqualsBean.beanHashCode() * ObjectBean.hashCode() * HashMap&lt;K,V&gt;.hash(Object) * HashMap&lt;K,V&gt;.readObject(ObjectInputStream)]]></description>
</item><item>
    <title>[Java安全] Jdk7u21链分析</title>
    <link>https://example.com/jdk7u21/</link>
    <pubDate>Mon, 24 Oct 2022 17:46:10 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/jdk7u21/</guid>
    <description><![CDATA[Gadget1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 LinkedHashSet.readObject() LinkedHashSet.add() ... TemplatesImpl.hashCode() (X) LinkedHashSet.add() ... Proxy(Templates).hashCode() (X) AnnotationInvocationHandler.invoke() (X) AnnotationInvocationHandler.hashCodeImpl() (X) String.hashCode() (0) AnnotationInvocationHandler.memberValueHashCode() (X) TemplatesImpl.hashCode() (X) Proxy(Templates).equals() AnnotationInvocationHandler.invoke() AnnotationInvocationHandler.equalsImpl() Method.invoke() ... TemplatesImpl.getOutputProperties() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() ClassLoader.defineClass() Class.newInstance() ... MaliciousClass.&lt;clinit&gt;() ... Runtime.exec() 利用链分析这个利用]]></description>
</item><item>
    <title>[Java安全] CommonsCollections7链分析</title>
    <link>https://example.com/cc7/</link>
    <pubDate>Mon, 24 Oct 2022 13:08:26 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/cc7/</guid>
    <description><![CDATA[gadget1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Gadget chain: Hashtable.readObject Hashtable.reconstitutionPut AbstractMapDecorator.equals AbstractMap.equals LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() InvokerTransformer.transform() Method.invoke() Class.getMethod() InvokerTransformer.transform() Method.invoke() Runtime.getRuntime() InvokerTransformer.transform() Method.invoke() Runtime.exec() 利用链分析CC7的关键点是利用到AbstractMap的equals方]]></description>
</item><item>
    <title>[Java安全] CommonsBeanutils1在Shiro中的利用</title>
    <link>https://example.com/shiro2/</link>
    <pubDate>Thu, 06 Oct 2022 17:57:59 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/shiro2/</guid>
    <description><![CDATA[前言为什么CB1会和Shiro扯上关系，前面我们研究Shiro反序列化的时候，使用的是P牛的demo，我们可以看到maven项目里是装了一个]]></description>
</item><item>
    <title>[Java安全] CommonsBeanutils1利用链分析</title>
    <link>https://example.com/cb1/</link>
    <pubDate>Thu, 06 Oct 2022 15:20:08 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/cb1/</guid>
    <description><![CDATA[前言Apache Commons Beanutils 是 Apache Commons 工具集下的另一个项目，它提供了对普通Java类对象（也称为JavaBean）的一些操作方法 JavaBean就不多说]]></description>
</item><item>
    <title>[Java安全] CommonsCollections4链分析</title>
    <link>https://example.com/cc4/</link>
    <pubDate>Wed, 05 Oct 2022 22:03:34 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/cc4/</guid>
    <description><![CDATA[前言Apache Commons Collections有以下两 个分⽀版本： commons-collections:commons-collections org.apache.commons:commons-collections4 前者是Commons Collections⽼的版本包，当时版本号是3.2.1]]></description>
</item><item>
    <title>[Java安全] Shiro反序列化CC链漏洞</title>
    <link>https://example.com/shiro1/</link>
    <pubDate>Mon, 03 Oct 2022 22:30:52 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/shiro1/</guid>
    <description><![CDATA[测试环境搭建我这里用的是P牛的JavaThings，这里有一个Maven构建的非常简易的Shiro的应用 这里用idea打开，然后构建Mave]]></description>
</item><item>
    <title>[Java安全] CommonsCollections3链分析</title>
    <link>https://example.com/cc3/</link>
    <pubDate>Mon, 03 Oct 2022 20:47:28 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/cc3/</guid>
    <description><![CDATA[前言因为一些反序列化的过滤工具的原因，把CC1的InvokeTransformer等给过滤了，所以设计出CC3来绕过⼀些规则对Invoker]]></description>
</item><item>
    <title>[Java安全] Templatesimpl与字节码</title>
    <link>https://example.com/templatesimpl/</link>
    <pubDate>Mon, 03 Oct 2022 14:39:19 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/templatesimpl/</guid>
    <description><![CDATA[Java字节码 URLClassLoader远程加载在前面学习classloader的时候就学习到了URLClassLoader，进行远程加载]]></description>
</item><item>
    <title>[Java安全] CommonsCollections6链分析</title>
    <link>https://example.com/cc6/</link>
    <pubDate>Sun, 02 Oct 2022 15:51:14 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/cc6/</guid>
    <description><![CDATA[前言之前我们分析了CC1，从简化版开始学习，再到完整分析CC1，再学习了动态代理和LazyMap的利用链构造，但是都有一个缺陷就是版本限制，]]></description>
</item></channel>
</rss>
