<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>技术分享 on Huamang</title>
        <link>https://blog.huamang.xyz/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/</link>
        <description>Recent content in 技术分享 on Huamang</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 19 Sep 2022 02:09:13 +0800</lastBuildDate><atom:link href="https://blog.huamang.xyz/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>SSTI_OF_FLASK</title>
        <link>https://blog.huamang.xyz/post/ssti/</link>
        <pubDate>Mon, 19 Sep 2022 02:09:13 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/ssti/</guid>
        <description>前言 之前一直是套着公式去做ssti的题目，遇到需要一些变化的，可能就会卡住了，所以这里打算学习并梳理一下关于Python中SSTI的知识点 Flask</description>
        </item>
        <item>
        <title>校赛CTFd平台docker搭建—pixo主题</title>
        <link>https://blog.huamang.xyz/post/%E6%A0%A1%E8%B5%9B%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/</link>
        <pubDate>Tue, 19 Apr 2022 18:27:37 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/%E6%A0%A1%E8%B5%9B%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/</guid>
        <description>前言 （使用github图床，请科学上网） 搭建校赛平台，这里是发现有一个很好看的ctfd的主题pixo 所以就想着来搭建这么一个平台，这次我打算</description>
        </item>
        <item>
        <title>[SCTF2021]Upload_it_1复现闭包组件反序列化rce</title>
        <link>https://blog.huamang.xyz/post/sctf2021/</link>
        <pubDate>Sun, 13 Feb 2022 19:12:40 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/sctf2021/</guid>
        <description>题目地址 SycloverTeam提供了题目的docker环境 https://github.com/SycloverTeam/SCTF2021/tree/master/web/Upload_it_1 wp 首先题目给了composer.json 1 2 3 4 5 6 7 8 9 10 11 12 13 { &amp;#34;name&amp;#34;: &amp;#34;sctf2021/upload&amp;#34;, &amp;#34;authors&amp;#34;: [ {</description>
        </item>
        <item>
        <title>利用PHP的NAN和INF来获取字符串来自增绕过长度限制</title>
        <link>https://blog.huamang.xyz/post/%E5%88%A9%E7%94%A8php%E7%9A%84nan%E5%92%8Cinf%E6%9D%A5%E8%8E%B7%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9D%A5%E8%87%AA%E5%A2%9E%E7%BB%95%E8%BF%87%E9%95%BF%E5%BA%A6%E9%99%90%E5%88%B6/</link>
        <pubDate>Thu, 19 Aug 2021 18:53:44 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/%E5%88%A9%E7%94%A8php%E7%9A%84nan%E5%92%8Cinf%E6%9D%A5%E8%8E%B7%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9D%A5%E8%87%AA%E5%A2%9E%E7%BB%95%E8%BF%87%E9%95%BF%E5%BA%A6%E9%99%90%E5%88%B6/</guid>
        <description>最近在一道题目里面学到了一个新的小技巧 在php中，字符串是可以递增的，如下： 但是不可递减 这道题是这样的 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
        </item>
        
    </channel>
</rss>
