<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Huamang&#39;s Blog</title>
        <link>https://example.com/posts/</link>
        <description>所有文章 | Huamang&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>3364744355@qq.com (Huamang)</managingEditor>
            <webMaster>3364744355@qq.com (Huamang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 06 Oct 2022 17:57:59 &#43;0800</lastBuildDate><atom:link href="https://example.com/posts/" rel="self" type="application/rss+xml" /><item>
    <title>[Java安全] CommonsBeanutils1在Shiro中的利用</title>
    <link>https://example.com/shiro2/</link>
    <pubDate>Thu, 06 Oct 2022 17:57:59 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/shiro2/</guid>
    <description><![CDATA[前言为什么CB1会和Shiro扯上关系，前面我们研究Shiro反序列化的时候，使用的是P牛的demo，我们可以看到maven项目里是装了一个]]></description>
</item><item>
    <title>[Java安全] CommonsBeanutils1利用链分析</title>
    <link>https://example.com/cb1/</link>
    <pubDate>Thu, 06 Oct 2022 15:20:08 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/cb1/</guid>
    <description><![CDATA[前言Apache Commons Beanutils 是 Apache Commons 工具集下的另一个项目，它提供了对普通Java类对象（也称为JavaBean）的一些操作方法 JavaBean就不多说]]></description>
</item><item>
    <title>[Java安全] CommonsCollections4链分析</title>
    <link>https://example.com/cc4/</link>
    <pubDate>Wed, 05 Oct 2022 22:03:34 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/cc4/</guid>
    <description><![CDATA[前言Apache Commons Collections有以下两 个分⽀版本： commons-collections:commons-collections org.apache.commons:commons-collections4 前者是Commons Collections⽼的版本包，当时版本号是3.2.1]]></description>
</item><item>
    <title>[Java安全] Shiro反序列化CC链漏洞</title>
    <link>https://example.com/shiro1/</link>
    <pubDate>Mon, 03 Oct 2022 22:30:52 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/shiro1/</guid>
    <description><![CDATA[测试环境搭建我这里用的是P牛的JavaThings，这里有一个Maven构建的非常简易的Shiro的应用 这里用idea打开，然后构建Mave]]></description>
</item><item>
    <title>[Java安全] CommonsCollections3链分析</title>
    <link>https://example.com/cc3/</link>
    <pubDate>Mon, 03 Oct 2022 20:47:28 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/cc3/</guid>
    <description><![CDATA[前言因为一些反序列化的过滤工具的原因，把CC1的InvokeTransformer等给过滤了，所以设计出CC3来绕过⼀些规则对Invoker]]></description>
</item><item>
    <title>[Java安全] Templatesimpl与字节码</title>
    <link>https://example.com/templatesimpl/</link>
    <pubDate>Mon, 03 Oct 2022 14:39:19 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/templatesimpl/</guid>
    <description><![CDATA[Java字节码 URLClassLoader远程加载在前面学习classloader的时候就学习到了URLClassLoader，进行远程加载]]></description>
</item><item>
    <title>[Java安全] CommonsCollections6链分析</title>
    <link>https://example.com/cc6/</link>
    <pubDate>Sun, 02 Oct 2022 15:51:14 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/cc6/</guid>
    <description><![CDATA[前言之前我们分析了CC1，从简化版开始学习，再到完整分析CC1，再学习了动态代理和LazyMap的利用链构造，但是都有一个缺陷就是版本限制，]]></description>
</item><item>
    <title>[Java安全] CommonsCollections1链分析</title>
    <link>https://example.com/cc1/</link>
    <pubDate>Thu, 29 Sep 2022 14:05:47 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/cc1/</guid>
    <description><![CDATA[前面写了很多，现在终于到大名鼎鼎的CC链了，这里我还是跟P牛的《Java安全漫谈》来对CC链进行分析学习 CommonCollection1前]]></description>
</item><item>
    <title>[Java安全] URLDNS</title>
    <link>https://example.com/urldns/</link>
    <pubDate>Thu, 29 Sep 2022 00:34:07 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/urldns/</guid>
    <description><![CDATA[前言Java反序列化的基础知识前面已经大概了解了，现在终于到上手的时候了，这里按p牛说的来，先从DNSURL下手，进行反序列利用链的入门 ys]]></description>
</item><item>
    <title>[Java安全] Java反序列化</title>
    <link>https://example.com/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</link>
    <pubDate>Wed, 28 Sep 2022 16:12:56 &#43;0800</pubDate><author>
        <name>Huamang</name>
    </author><guid>https://example.com/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</guid>
    <description><![CDATA[前言在Java安全中，Java反序列化占据很重要的地位。 在前面RMI的探索中，我们可以在数据包中看到，他传递的数据是序列化的 Java的反序列]]></description>
</item></channel>
</rss>
