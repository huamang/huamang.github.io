<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Huamang</title>
        <link>https://blog.huamang.xyz/post/</link>
        <description>Recent content in Posts on Huamang</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 11 Nov 2022 15:04:12 +0800</lastBuildDate><atom:link href="https://blog.huamang.xyz/post/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>[CVE-2022-2633] WordPress All-in-One插件SSRF&#43;任意文件下载</title>
        <link>https://blog.huamang.xyz/post/cve-2022-2633/</link>
        <pubDate>Fri, 11 Nov 2022 15:04:12 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/cve-2022-2633/</guid>
        <description>漏洞简介 CVE编号：CVE-2022-2633 漏洞描述：WordPress的All-in-One视频库插件存在任意用户的任意文件下载和SSR</description>
        </item>
        <item>
        <title>[Java安全] Fastjson的反序列化</title>
        <link>https://blog.huamang.xyz/post/fastjson/</link>
        <pubDate>Fri, 04 Nov 2022 12:04:30 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/fastjson/</guid>
        <description>前言 在学习反序列化的时候，我不禁会想，链子就算满天飞，但是可能现实中就是没有一个允许用户控制的反序列化的点来触发。 之前学习到的Shiro55</description>
        </item>
        <item>
        <title>[2022祥云杯] wp</title>
        <link>https://blog.huamang.xyz/post/xyb2022/</link>
        <pubDate>Mon, 31 Oct 2022 10:27:38 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/xyb2022/</guid>
        <description>Web ezjava /myTest路由可以直接反序列化 而且存在CC4.0，可以直接cc4打 yso本地打通，但是远程打不了，发现是不出网的，这里打一个tomc</description>
        </item>
        <item>
        <title>[Java安全] ROME链分析</title>
        <link>https://blog.huamang.xyz/post/rome/</link>
        <pubDate>Wed, 26 Oct 2022 10:49:50 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/rome/</guid>
        <description>Gadget ysoserial利用的是ObjectBean 1 2 3 4 5 6 7 8 9 10 11 12 * TemplatesImpl.getOutputProperties() * NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) * NativeMethodAccessorImpl.invoke(Object, Object[]) * DelegatingMethodAccessorImpl.invoke(Object, Object[]) * Method.invoke(Object, Object...) * ToStringBean.toString(String) * ToStringBean.toString() * ObjectBean.toString() * EqualsBean.beanHashCode() * ObjectBean.hashCode() * HashMap&amp;lt;K,V&amp;gt;.hash(Object) * HashMap&amp;lt;K,V&amp;gt;.readObject(ObjectInputStream) 依赖 1 2 3</description>
        </item>
        <item>
        <title>[Java安全] Jdk7u21链分析</title>
        <link>https://blog.huamang.xyz/post/jdk7u21/</link>
        <pubDate>Mon, 24 Oct 2022 17:46:10 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/jdk7u21/</guid>
        <description>Gadget 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 LinkedHashSet.readObject() LinkedHashSet.add() ... TemplatesImpl.hashCode() (X) LinkedHashSet.add() ... Proxy(Templates).hashCode() (X) AnnotationInvocationHandler.invoke() (X) AnnotationInvocationHandler.hashCodeImpl() (X) String.hashCode() (0) AnnotationInvocationHandler.memberValueHashCode() (X) TemplatesImpl.hashCode() (X) Proxy(Templates).equals() AnnotationInvocationHandler.invoke() AnnotationInvocationHandler.equalsImpl() Method.invoke() ... TemplatesImpl.getOutputProperties() TemplatesImpl.newTransformer() TemplatesImpl.getTransletInstance() TemplatesImpl.defineTransletClasses() ClassLoader.defineClass() Class.newInstance() ... MaliciousClass.&amp;lt;clinit&amp;gt;() ... Runtime.exec() 利用链分析 这个利</description>
        </item>
        <item>
        <title>[Java安全] CommonsCollections7链分析</title>
        <link>https://blog.huamang.xyz/post/cc7/</link>
        <pubDate>Mon, 24 Oct 2022 13:08:26 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/cc7/</guid>
        <description>gadget 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Gadget chain: Hashtable.readObject Hashtable.reconstitutionPut AbstractMapDecorator.equals AbstractMap.equals LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() InvokerTransformer.transform() Method.invoke() Class.getMethod() InvokerTransformer.transform() Method.invoke() Runtime.getRuntime() InvokerTransformer.transform() Method.invoke() Runtime.exec() 利用链分析 CC7的关键点是利用到AbstractMap的equals</description>
        </item>
        <item>
        <title>[Java安全] CommonsBeanutils1在Shiro中的利用</title>
        <link>https://blog.huamang.xyz/post/shiro2/</link>
        <pubDate>Thu, 06 Oct 2022 17:57:59 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/shiro2/</guid>
        <description>前言 为什么CB1会和Shiro扯上关系，前面我们研究Shiro反序列化的时候，使用的是P牛的demo，我们可以看到maven项目里是装了一个</description>
        </item>
        <item>
        <title>[Java安全] CommonsBeanutils1利用链分析</title>
        <link>https://blog.huamang.xyz/post/cb1/</link>
        <pubDate>Thu, 06 Oct 2022 15:20:08 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/cb1/</guid>
        <description>前言 Apache Commons Beanutils 是 Apache Commons 工具集下的另一个项目，它提供了对普通Java类对象（也称为JavaBean）的一些操作方法 JavaBean就不多说了，搞过一</description>
        </item>
        <item>
        <title>[Java安全] CommonsCollections4链分析</title>
        <link>https://blog.huamang.xyz/post/cc4/</link>
        <pubDate>Wed, 05 Oct 2022 22:03:34 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/cc4/</guid>
        <description>前言 Apache Commons Collections有以下两 个分⽀版本： commons-collections:commons-collections org.apache.commons:commons-collections4 前者是Commons Collections⽼的版本包，当时版本号是3.2.1；后者是官</description>
        </item>
        <item>
        <title>[Java安全] Shiro反序列化CC链漏洞</title>
        <link>https://blog.huamang.xyz/post/shiro1/</link>
        <pubDate>Mon, 03 Oct 2022 22:30:52 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/shiro1/</guid>
        <description>测试环境搭建 我这里用的是P牛的JavaThings，这里有一个Maven构建的非常简易的Shiro的应用 这里用idea打开，然后构建Mave</description>
        </item>
        <item>
        <title>[Java安全] CommonsCollections3链分析</title>
        <link>https://blog.huamang.xyz/post/cc3/</link>
        <pubDate>Mon, 03 Oct 2022 20:47:28 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/cc3/</guid>
        <description>前言 因为一些反序列化的过滤工具的原因，把CC1的InvokeTransformer等给过滤了，所以设计出CC3来绕过⼀些规则对Invoker</description>
        </item>
        <item>
        <title>[Java安全] Templatesimpl与字节码</title>
        <link>https://blog.huamang.xyz/post/templatesimpl/</link>
        <pubDate>Mon, 03 Oct 2022 14:39:19 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/templatesimpl/</guid>
        <description>Java字节码 URLClassLoader远程加载 在前面学习classloader的时候就学习到了URLClassLoader，进行远程加载</description>
        </item>
        <item>
        <title>[Java安全] CommonsCollections6链分析</title>
        <link>https://blog.huamang.xyz/post/cc6/</link>
        <pubDate>Sun, 02 Oct 2022 15:51:14 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/cc6/</guid>
        <description>前言 之前我们分析了CC1，从简化版开始学习，再到完整分析CC1，再学习了动态代理和LazyMap的利用链构造，但是都有一个缺陷就是版本限制，</description>
        </item>
        <item>
        <title>[Java安全] CommonsCollections1链分析</title>
        <link>https://blog.huamang.xyz/post/cc1/</link>
        <pubDate>Thu, 29 Sep 2022 14:05:47 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/cc1/</guid>
        <description>前面写了很多，现在终于到大名鼎鼎的CC链了，这里我还是跟P牛的《Java安全漫谈》来对CC链进行分析学习 CommonCollection1 前菜 首先P牛帮我们简化CC链成如下</description>
        </item>
        <item>
        <title>[Java安全] URLDNS</title>
        <link>https://blog.huamang.xyz/post/urldns/</link>
        <pubDate>Thu, 29 Sep 2022 00:34:07 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/urldns/</guid>
        <description>前言 Java反序列化的基础知识前面已经大概了解了，现在终于到上手的时候了，这里按p牛说的来，先从DNSURL下手，进行反序列利用链的入门 ysoserial 这</description>
        </item>
        <item>
        <title>[Java安全] Java反序列化</title>
        <link>https://blog.huamang.xyz/post/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</link>
        <pubDate>Wed, 28 Sep 2022 16:12:56 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</guid>
        <description>前言 在Java安全中，Java反序列化占据很重要的地位。 在前面RMI的探索中，我们可以在数据包中看到，他传递的数据是序列化的 Java的反序列</description>
        </item>
        <item>
        <title>[Java安全] RMI</title>
        <link>https://blog.huamang.xyz/post/java%E5%AE%89%E5%85%A8_rmi/</link>
        <pubDate>Tue, 27 Sep 2022 14:43:46 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/java%E5%AE%89%E5%85%A8_rmi/</guid>
        <description>前言 RMI全程Remote Method Invocation，远程⽅法调⽤ 他的功能是让一个Java虚拟机上的对象调用另一个Java虚拟机中对象上的方法，</description>
        </item>
        <item>
        <title>SSTI_OF_FLASK</title>
        <link>https://blog.huamang.xyz/post/ssti/</link>
        <pubDate>Mon, 19 Sep 2022 02:09:13 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/ssti/</guid>
        <description>前言 之前一直是套着公式去做ssti的题目，遇到需要一些变化的，可能就会卡住了，所以这里打算学习并梳理一下关于Python中SSTI的知识点 Flask</description>
        </item>
        <item>
        <title>[2022强网杯] WP</title>
        <link>https://blog.huamang.xyz/post/qwb2022/</link>
        <pubDate>Sun, 31 Jul 2022 20:35:47 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/qwb2022/</guid>
        <description>rcefile 预期解 原题改的：https://cloud.tencent.com/developer/article/1717668 首先是www.zip</description>
        </item>
        <item>
        <title>[TyphoonCon CTF 2022] WP</title>
        <link>https://blog.huamang.xyz/post/typhoonconctf2022/</link>
        <pubDate>Sat, 25 Jun 2022 22:46:06 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/typhoonconctf2022/</guid>
        <description>KnowMe 首先是扫了个目录，发现了robots.txt 1 2 /items.php /var/www/flag 这里的items.php是一个查询接口 经测试是order by的盲注，这里我写了个脚本，</description>
        </item>
        <item>
        <title>[CISCN2022] Semifinals</title>
        <link>https://blog.huamang.xyz/post/ciscn2022_half/</link>
        <pubDate>Fri, 24 Jun 2022 20:21:08 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/ciscn2022_half/</guid>
        <description>ikari 在index.php里面有这么一段代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 try { require ROOT_PATH . &amp;#39;Engine/Loader.php&amp;#39;; E\Loader::getInstance()-&amp;gt;init(); // Load necessary classes $aParams = [&amp;#39;ctrl&amp;#39; =&amp;gt; (!empty($_GET[&amp;#39;p&amp;#39;]) ? $_GET[&amp;#39;p&amp;#39;] : &amp;#39;blog&amp;#39;), &amp;#39;act&amp;#39; =&amp;gt; (!empty($_GET[&amp;#39;a&amp;#39;]) ? $_GET[&amp;#39;a&amp;#39;] : &amp;#39;index&amp;#39;), &amp;#39;template&amp;#39; =&amp;gt; (!empty($_GET[&amp;#39;t&amp;#39;]) ? $_GET[&amp;#39;t&amp;#39;] : &amp;#39;pc&amp;#39;), &amp;#39;ns&amp;#39;</description>
        </item>
        <item>
        <title>[CISCN2022] online_crt</title>
        <link>https://blog.huamang.xyz/post/ciscn2022_crt/</link>
        <pubDate>Tue, 31 May 2022 01:09:09 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/ciscn2022_crt/</guid>
        <description>0x01 前期准备 源码 题目源码用于本地的调试，有所改动，考虑篇幅，只展示重要逻辑代码 app.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31</description>
        </item>
        <item>
        <title>[2022DASCTF Apr X FATE 防疫挑战赛] WP</title>
        <link>https://blog.huamang.xyz/post/2022dasctf%E5%9B%9B%E6%9C%88%E8%B5%9B_wp/</link>
        <pubDate>Mon, 25 Apr 2022 18:12:37 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/2022dasctf%E5%9B%9B%E6%9C%88%E8%B5%9B_wp/</guid>
        <description>Misc SimpleFlow 看流量大概是上传了一个后门，但是会对payload加密，这里发现有flag.txt被打包 后面的包里面发现flag.zip 但是打开需要密码</description>
        </item>
        <item>
        <title>[MRCTF2022] WP</title>
        <link>https://blog.huamang.xyz/post/mrctf2022_wp/</link>
        <pubDate>Mon, 25 Apr 2022 18:01:47 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/mrctf2022_wp/</guid>
        <description>Misc checkin 翻源码找到flag Web WebCheckIn 上传东西上去发现没有回显，然后试着传其他的文件上去，发现随手写的php文件上传上去了，返回了路径 然后就往里面加了一</description>
        </item>
        <item>
        <title>[*CTF2022] oh-my-lotto-revenge</title>
        <link>https://blog.huamang.xyz/post/ctf2022_oh-my-lotto-revenge/</link>
        <pubDate>Wed, 20 Apr 2022 18:24:27 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/ctf2022_oh-my-lotto-revenge/</guid>
        <description>New 相对于oh_my_lotto，revenge进行了下面的更改 这么做，我们能走的就只有RCE了，而这里唯一能操作的一个地方就是这里，可以操作</description>
        </item>
        <item>
        <title>校赛CTFd平台docker搭建—pixo主题</title>
        <link>https://blog.huamang.xyz/post/%E6%A0%A1%E8%B5%9B%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/</link>
        <pubDate>Tue, 19 Apr 2022 18:27:37 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/%E6%A0%A1%E8%B5%9B%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/</guid>
        <description>前言 （使用github图床，请科学上网） 搭建校赛平台，这里是发现有一个很好看的ctfd的主题pixo 所以就想着来搭建这么一个平台，这次我打算</description>
        </item>
        <item>
        <title>[*CTF2022] WP</title>
        <link>https://blog.huamang.xyz/post/ctf2022_wp/</link>
        <pubDate>Sun, 17 Apr 2022 18:29:06 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/ctf2022_wp/</guid>
        <description>Web oh-my-grafana 存在CVE-2021-43798 paylaod 1 http://124.70.163.46:3000/public/plugins/alertGroups/..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fvar/lib/grafana/grafana.db 有个加盐的密码 再找找其他配置文件，反正任意文件读取用起来 1 http://124.70.163.46:3000/public/plugins/alertGroups/..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fetc/grafana/grafana.ini 拿到了密码 1 2 3 4 5 # default admin user, created on startup admin_user =</description>
        </item>
        <item>
        <title>[Java安全]类加载器ClassLoader</title>
        <link>https://blog.huamang.xyz/post/java%E5%AE%89%E5%85%A8_%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8/</link>
        <pubDate>Wed, 30 Mar 2022 19:17:18 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/java%E5%AE%89%E5%85%A8_%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8/</guid>
        <description>前言 借用了先知社区的文章的一张图来解释这个原理 负责动态加载Java类到Java虚拟机的内存空间中，用于加载系统、网络或者其他来源的类文件。J</description>
        </item>
        <item>
        <title>[SUCTF2022] WP</title>
        <link>https://blog.huamang.xyz/post/suctf2022/</link>
        <pubDate>Mon, 28 Mar 2022 18:35:14 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/suctf2022/</guid>
        <description>Misc Hi hacker 下载到是一个流量包，分析tcp流，发现是一个后面执行命令的 这里有一个文件jenkins_secret.zip 看下一个包里面，他进行了这</description>
        </item>
        <item>
        <title>[HMGCTF2022] WP</title>
        <link>https://blog.huamang.xyz/post/hmgctf2022/</link>
        <pubDate>Thu, 24 Mar 2022 18:46:53 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/hmgctf2022/</guid>
        <description>WEB Fan website 首先是一个www.zip的源码泄露，是laminas框架 mvc的框架首先就是看路由 在\module\Album\src\Control</description>
        </item>
        <item>
        <title>[Java安全]反射</title>
        <link>https://blog.huamang.xyz/post/java%E5%AE%89%E5%85%A8_%E5%8F%8D%E5%B0%84/</link>
        <pubDate>Mon, 07 Mar 2022 19:14:57 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/java%E5%AE%89%E5%85%A8_%E5%8F%8D%E5%B0%84/</guid>
        <description>前言 准备入手学习java的安全了，感觉这也是一个大的趋势，想着尽早进入到java安全的探索中，在反序列化链的学习之前，需要先学习反射，不多说</description>
        </item>
        <item>
        <title>[SCTF2021]Upload_it_1复现闭包组件反序列化rce</title>
        <link>https://blog.huamang.xyz/post/sctf2021/</link>
        <pubDate>Sun, 13 Feb 2022 19:12:40 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/sctf2021/</guid>
        <description>题目地址 SycloverTeam提供了题目的docker环境 https://github.com/SycloverTeam/SCTF2021/tree/master/web/Upload_it_1 wp 首先题目给了composer.json 1 2 3 4 5 6 7 8 9 10 11 12 13 { &amp;#34;name&amp;#34;: &amp;#34;sctf2021/upload&amp;#34;, &amp;#34;authors&amp;#34;: [ {</description>
        </item>
        <item>
        <title>[代码审计]信呼OA2.3.1版本代码审计</title>
        <link>https://blog.huamang.xyz/post/%E4%BF%A1%E5%91%BCoa2.3.1%E7%89%88%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</link>
        <pubDate>Tue, 30 Nov 2021 19:10:02 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/%E4%BF%A1%E5%91%BCoa2.3.1%E7%89%88%E6%9C%AC%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</guid>
        <description>前言 对于这个OA的代码审计是在最近的西湖论剑比赛中出的一个web题，题目是2.3.1版本的信呼OA，在当时是最新版的（2021.11.20）</description>
        </item>
        <item>
        <title>[代码审计]ThinkPHP 5.0.x 变量覆盖导致的RCE分析</title>
        <link>https://blog.huamang.xyz/post/thinkphp5.0.x%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%AF%BC%E8%87%B4%E7%9A%84rce%E5%88%86%E6%9E%90/</link>
        <pubDate>Fri, 26 Nov 2021 19:07:54 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/thinkphp5.0.x%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%AF%BC%E8%87%B4%E7%9A%84rce%E5%88%86%E6%9E%90/</guid>
        <description>前言 漏洞存在版本，分为两大版本： ThinkPHP 5.0-5.0.24 ThinkPHP 5.1.0-5.1.30 环境搭建 1 composer create-project topthink/think=5.0.5 thinkphp5.0.5 --prefer-dist 修改composer.json 1 2 3 4 &amp;#34;require&amp;#34;: { &amp;#34;php&amp;#34;: &amp;#34;&amp;gt;=5.4.0&amp;#34;, &amp;#34;topthink/framework&amp;#34;: &amp;#34;5.0.5&amp;#34; }, 执行composer update 漏洞分</description>
        </item>
        <item>
        <title>[代码审计]Yii2反序列化漏洞分析 V2.0.38</title>
        <link>https://blog.huamang.xyz/post/yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
        <pubDate>Tue, 16 Nov 2021 19:01:32 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
        <description>前言 漏洞存在版本&amp;lt;2.0.38 CVE-2020-15148 框架搭建 直接去github下载，修改好cookie的key，然后就可以访问/web了 漏洞分析 先看git</description>
        </item>
        <item>
        <title>[代码审计]ThinkPHP5的文件包含漏洞</title>
        <link>https://blog.huamang.xyz/post/tp5%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</link>
        <pubDate>Wed, 03 Nov 2021 18:57:48 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/tp5%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</guid>
        <description>漏洞影响范围 加载模版解析变量时存在变量覆盖问题，导致文件包含漏洞的产生 漏洞影响版本：5.0.0&amp;lt;=ThinkPHP5&amp;lt;=5.0.</description>
        </item>
        <item>
        <title>[Java安全] 远程调试初探</title>
        <link>https://blog.huamang.xyz/post/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1_%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%88%9D%E6%8E%A2/</link>
        <pubDate>Sat, 18 Sep 2021 18:56:41 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1_%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%88%9D%E6%8E%A2/</guid>
        <description>Jar包的调试 这里以冰蝎做示例 把冰蝎的jar包和他必须的db数据库文件放到项目的lib目录下 把jar包添加到库 如下配置调试配置 新建远程JVM</description>
        </item>
        <item>
        <title>利用PHP的NAN和INF来获取字符串来自增绕过长度限制</title>
        <link>https://blog.huamang.xyz/post/%E5%88%A9%E7%94%A8php%E7%9A%84nan%E5%92%8Cinf%E6%9D%A5%E8%8E%B7%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9D%A5%E8%87%AA%E5%A2%9E%E7%BB%95%E8%BF%87%E9%95%BF%E5%BA%A6%E9%99%90%E5%88%B6/</link>
        <pubDate>Thu, 19 Aug 2021 18:53:44 +0800</pubDate>
        
        <guid>https://blog.huamang.xyz/post/%E5%88%A9%E7%94%A8php%E7%9A%84nan%E5%92%8Cinf%E6%9D%A5%E8%8E%B7%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9D%A5%E8%87%AA%E5%A2%9E%E7%BB%95%E8%BF%87%E9%95%BF%E5%BA%A6%E9%99%90%E5%88%B6/</guid>
        <description>最近在一道题目里面学到了一个新的小技巧 在php中，字符串是可以递增的，如下： 但是不可递减 这道题是这样的 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
        </item>
        
    </channel>
</rss>
